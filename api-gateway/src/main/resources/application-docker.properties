spring.application.name=api-gateway

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://host.docker.internal:8080/realms/pbl-api}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWK_SET_URI:http://host.docker.internal:8080/realms/pbl-api/protocol/openid-connect/certs}

logging.file.path=/.logs

server.port=8080
eureka.client.serviceUrl.defaultZone=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@discovery-server:8761/eureka
eureka.instance.hostname=api-gateway
management.endpoints.web.exposure.include=gateway,metrics,info,health,prometheus

spring.cloud.gateway.globalcors.cors-configuration

spring.cloud.gateway.mvc.routes[0].id=chat-api
spring.cloud.gateway.mvc.routes[0].uri=lb://chat-api
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/api/v1/chat/**
spring.cloud.gateway.mvc.routes[0].filters[0]=StripPrefix=3

spring.cloud.gateway.mvc.routes[1].id=profile-api
spring.cloud.gateway.mvc.routes[1].uri=lb://profile-api
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/api/v1/profile/**
spring.cloud.gateway.mvc.routes[1].filters[0]=StripPrefix=3

spring.cloud.gateway.mvc.routes[2].id=rag-api
spring.cloud.gateway.mvc.routes[2].uri=lb://rag-api
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/api/v1/rag/**
spring.cloud.gateway.mvc.routes[2].filters[0]=StripPrefix=3

spring.cloud.gateway.mvc.routes[3].id=discovery-server
spring.cloud.gateway.mvc.routes[3].uri=http://discovery-server:8761
spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/eureka/web
spring.cloud.gateway.mvc.routes[3].filters[0]=SetPath=/

spring.cloud.gateway.mvc.routes[4].id=discovery-server-static
spring.cloud.gateway.mvc.routes[4].uri=http://discovery-server:8761
spring.cloud.gateway.mvc.routes[4].predicates[0]=Path=/eureka/**
